###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         02/Nov/2022  22:02:35
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =  C:\team02\user\main.c
#    Command line                 =
#        -f C:\team02\Debug\Obj\user\main.o.rsp (C:\team02\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC C:\team02\Debug\List\user -o
#        C:\team02\Debug\Obj\user --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\team02\libraries\CMSIS\DeviceSupport\ -I
#        C:\team02\libraries\CMSIS\DeviceSupport\Startup\ -I
#        C:\team02\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\ -I
#        C:\team02\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\ -I
#        C:\team02\libraries\LCD\ -I C:\team02\user\ -I C:\team02\user\inc\ -Ol
#        -I "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\arm\CMSIS\Core\Include\\") --dependencies=n
#        C:\team02\Debug\Obj\user\main.o.d
#    Locale                       =  C
#    List file                    =  C:\team02\Debug\List\user\main.lst
#    Object file                  =  C:\team02\Debug\Obj\user\main.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#      __size_limit               =  32768|ARM.EW.LINKER
#
###############################################################################

C:\team02\user\main.c
      1          #include "misc.h"
      2          #include "stm32f10x.h"
      3          #include "stm32f10x_exti.h"
      4          #include "stm32f10x_gpio.h"
      5          #include "stm32f10x_rcc.h"
      6          #include "stm32f10x_adc.h"
      7          #include "stm32f10x_usart.h"
      8          #include "stm32f10x_tim.h"
      9          #include "lcd.h"
     10          #include "touch.h"
     11          #include <stdlib.h>
     12          #include <stdio.h>
     13          

   \                                 In section .bss, align 2
     14          uint16_t Temp_LED1 = 0;
   \                     Temp_LED1:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
     15          uint16_t Temp_LED4 = 0; 
   \                     Temp_LED4:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
     16          uint16_t doToggling = 0;
   \                     doToggling:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
     17          uint16_t count = 0;
   \                     count:
   \        0x0                      DS8 2
     18          /* function prototype */
     19          void Delay(void);
     20          

   \                                 In section .bss, align 2
     21          uint16_t brightness = 0;
   \                     brightness:
   \        0x0                      DS8 2
     22          
     23          //---------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     24          void RCC_Configure(void) {
   \                     RCC_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     25              // TODO: Enable the APB2 peripheral clock using the function 'RCC_APB2PeriphClockCmd'
     26          
     27              /* UART TX/RX port clock enable */
     28              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2004             MOVS     R0,#+4
   \        0x6   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     29              /* Alternate Function IO clock enable */
     30              RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
   \        0xA   0x2101             MOVS     R1,#+1
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     31              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0x2020             MOVS     R0,#+32
   \       0x16   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     32              RCC_APB1PeriphClockCmd(RCC_APB1ENR_TIM2EN, ENABLE);
   \       0x1A   0x2101             MOVS     R1,#+1
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
     33          }
   \       0x22   0xBD01             POP      {R0,PC}
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void GPIO_Configure(void) {
   \                     GPIO_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     36              GPIO_InitTypeDef GPIO_InitStructure;
     37            
     38              /* LED pin setting*/
     39              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2 | GPIO_Pin_7;
   \        0x2   0x2084             MOVS     R0,#+132
   \        0x4   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     40              GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
   \        0x8   0x2003             MOVS     R0,#+3
   \        0xA   0xF88D 0x0002      STRB     R0,[SP, #+2]
     41              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
   \        0xE   0x2010             MOVS     R0,#+16
   \       0x10   0xF88D 0x0003      STRB     R0,[SP, #+3]
     42              GPIO_Init(GPIOD, &GPIO_InitStructure);
   \       0x14   0x4669             MOV      R1,SP
   \       0x16   0x....             LDR.N    R0,??DataTable5_1
   \       0x18   0x.... 0x....      BL       GPIO_Init
     43          }
   \       0x1C   0xBD01             POP      {R0,PC}
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void EXTI_Configure(void) {
   \                     EXTI_Configure: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     46              EXTI_InitTypeDef EXTI_InitStructure;
     47              
     48              GPIO_EXTILineConfig(GPIO_PortSourceGPIOC, GPIO_PinSource5);
   \        0x2   0x2105             MOVS     R1,#+5
   \        0x4   0x2002             MOVS     R0,#+2
   \        0x6   0x.... 0x....      BL       GPIO_EXTILineConfig
     49              EXTI_InitStructure.EXTI_Line = EXTI_Line11;
   \        0xA   0xF44F 0x6000      MOV      R0,#+2048
   \        0xE   0x9000             STR      R0,[SP, #+0]
     50              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0xF88D 0x0004      STRB     R0,[SP, #+4]
     51              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
   \       0x16   0x200C             MOVS     R0,#+12
   \       0x18   0xF88D 0x0005      STRB     R0,[SP, #+5]
     52              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0006      STRB     R0,[SP, #+6]
     53              EXTI_Init(&EXTI_InitStructure);
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x.... 0x....      BL       EXTI_Init
     54          
     55              
     56          }
   \       0x28   0xBD07             POP      {R0-R2,PC}
     57          

   \                                 In section .text, align 2, keep-with-next
     58          void NVIC_Configure(void) {
   \                     NVIC_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     59              NVIC_InitTypeDef NVIC_InitStructure;
     60          
     61              // TODO: fill the arg you want
     62              NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
   \        0x2   0xF44F 0x60A0      MOV      R0,#+1280
   \        0x6   0x.... 0x....      BL       NVIC_PriorityGroupConfig
     63              
     64              NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;
   \        0xA   0x2017             MOVS     R0,#+23
   \        0xC   0xF88D 0x0000      STRB     R0,[SP, #+0]
     65              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  // TODO
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0xF88D 0x0001      STRB     R0,[SP, #+1]
     66              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;         // TODO
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF88D 0x0002      STRB     R0,[SP, #+2]
     67              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x1C   0x2001             MOVS     R0,#+1
   \       0x1E   0xF88D 0x0003      STRB     R0,[SP, #+3]
     68              NVIC_Init(&NVIC_InitStructure);
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x.... 0x....      BL       NVIC_Init
     69              
     70              NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;
   \       0x28   0x201C             MOVS     R0,#+28
   \       0x2A   0xF88D 0x0000      STRB     R0,[SP, #+0]
     71              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  // TODO
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0xF88D 0x0001      STRB     R0,[SP, #+1]
     72              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;         // TODO
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0xF88D 0x0002      STRB     R0,[SP, #+2]
     73              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xF88D 0x0003      STRB     R0,[SP, #+3]
     74              NVIC_Init(&NVIC_InitStructure);
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x.... 0x....      BL       NVIC_Init
     75              
     76          }
   \       0x46   0xBD01             POP      {R0,PC}
     77          

   \                                 In section .text, align 2, keep-with-next
     78          void EXTI9_5_IRQHandler(void) {  // when the button is pressed
   \                     EXTI9_5_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     79              if (EXTI_GetITStatus(EXTI_Line11) != RESET) {
   \        0x2   0xF44F 0x6000      MOV      R0,#+2048
   \        0x6   0x.... 0x....      BL       EXTI_GetITStatus
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD013             BEQ.N    ??EXTI9_5_IRQHandler_0
     80                  if (GPIO_ReadInputDataBit(GPIOC, GPIO_Pin_11) == Bit_RESET) {
   \        0xE   0xF44F 0x6100      MOV      R1,#+2048
   \       0x12   0x....             LDR.N    R0,??DataTable5_2
   \       0x14   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD10C             BNE.N    ??EXTI9_5_IRQHandler_0
     81                      // TODO implement
     82                      if(doToggling == 0)
   \       0x1C   0x....             LDR.N    R1,??DataTable5_3
   \       0x1E   0x8808             LDRH     R0,[R1, #+0]
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD102             BNE.N    ??EXTI9_5_IRQHandler_1
     83                        doToggling = 1;
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x8008             STRH     R0,[R1, #+0]
   \       0x28   0xE001             B.N      ??EXTI9_5_IRQHandler_2
     84                      else
     85                        doToggling = 0;
   \                     ??EXTI9_5_IRQHandler_1: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x8008             STRH     R0,[R1, #+0]
     86                      EXTI_ClearITPendingBit(EXTI_Line11);
   \                     ??EXTI9_5_IRQHandler_2: (+1)
   \       0x2E   0xF44F 0x6000      MOV      R0,#+2048
   \       0x32   0x.... 0x....      BL       EXTI_ClearITPendingBit
     87                  }
     88              }
     89          }
   \                     ??EXTI9_5_IRQHandler_0: (+1)
   \       0x36   0xBD01             POP      {R0,PC}
     90          
     91          

   \                                 In section .text, align 2, keep-with-next
     92          void TIM_Configure(void) {
   \                     TIM_Configure: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
     93              TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
     94          
     95              TIM_TimeBaseStructure.TIM_Period = 10000;
   \        0x2   0xF242 0x7010      MOVW     R0,#+10000
   \        0x6   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     96              TIM_TimeBaseStructure.TIM_Prescaler = 7200;
   \        0xA   0xF44F 0x50E1      MOV      R0,#+7200
   \        0xE   0xF8AD 0x0000      STRH     R0,[SP, #+0]
     97              TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xF8AD 0x0006      STRH     R0,[SP, #+6]
     98              TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xF8AD 0x0002      STRH     R0,[SP, #+2]
     99          
    100              TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0xF05F 0x4080      MOVS     R0,#+1073741824
   \       0x24   0x.... 0x....      BL       TIM_TimeBaseInit
    101              
    102              TIM_Cmd(TIM2, ENABLE);
   \       0x28   0x2101             MOVS     R1,#+1
   \       0x2A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \       0x2E   0x.... 0x....      BL       TIM_Cmd
    103              TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);
   \       0x32   0x2201             MOVS     R2,#+1
   \       0x34   0x2101             MOVS     R1,#+1
   \       0x36   0xF05F 0x4080      MOVS     R0,#+1073741824
   \       0x3A   0x.... 0x....      BL       TIM_ITConfig
    104              
    105          }
   \       0x3E   0xBD07             POP      {R0-R2,PC}
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void TIM2_IRQHandler() {
   \                     TIM2_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    108              /*ITStatus*/
    109              if (TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET) {
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0xF05F 0x4080      MOVS     R0,#+1073741824
   \        0x8   0x.... 0x....      BL       TIM_GetITStatus
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD008             BEQ.N    ??TIM2_IRQHandler_0
    110                  count++;
   \       0x10   0x....             LDR.N    R0,??DataTable5_4
   \       0x12   0x8801             LDRH     R1,[R0, #+0]
   \       0x14   0x1C49             ADDS     R1,R1,#+1
   \       0x16   0x8001             STRH     R1,[R0, #+0]
    111                TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
   \       0x18   0x2101             MOVS     R1,#+1
   \       0x1A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \       0x1E   0x.... 0x....      BL       TIM_ClearITPendingBit
    112              }
    113          }
   \                     ??TIM2_IRQHandler_0: (+1)
   \       0x22   0xBD01             POP      {R0,PC}
    114          
    115          

   \                                 In section .text, align 2, keep-with-next
    116          void Delay(void) {
    117              int i;
    118              for (i = 0; i < 2000000; i++) {
   \                     Delay: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0xE000             B.N      ??Delay_0
   \                     ??Delay_1: (+1)
   \        0x4   0x1C40             ADDS     R0,R0,#+1
   \                     ??Delay_0: (+1)
   \        0x6   0x....             LDR.N    R1,??DataTable5_5
   \        0x8   0x4288             CMP      R0,R1
   \        0xA   0xDBFB             BLT.N    ??Delay_1
    119              }
    120          }
   \        0xC   0x4770             BX       LR
    121          

   \                                 In section .data, align 4
    122          int color[12] = {WHITE,CYAN,BLUE,RED,MAGENTA,LGRAY,GREEN,YELLOW,BROWN,BRRED,GRAY};
   \                     color:
   \        0x0   0x0000'FFFF        DC32 65'535, 32'767, 31, 63'488, 63'519, 50'712, 2'016, 65'504, 48'192

   \              0x0000'7FFF  

   \              0x0000'001F  

   \              0x0000'F800  

   \              0x0000'F81F  

   \              0x0000'C618  

   \              0x0000'07E0  

   \              0x0000'FFE0  

   \              0x0000'BC40
   \       0x24   0x0000'FC07        DC32 64'519, 33'840, 0

   \              0x0000'8430  

   \              0x0000'0000
    123          
    124          

   \                                 In section .text, align 2, keep-with-next
    125          int main(void) {
   \                     main: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
    126              SystemInit();
   \        0x2   0x.... 0x....      BL       SystemInit
    127              RCC_Configure();
   \        0x6   0x.... 0x....      BL       RCC_Configure
    128              GPIO_Configure();
   \        0xA   0x.... 0x....      BL       GPIO_Configure
    129              EXTI_Configure();
   \        0xE   0x.... 0x....      BL       EXTI_Configure
    130          /*--------------------------*/
    131              LCD_Init();
   \       0x12   0x.... 0x....      BL       LCD_Init
    132              Touch_Configuration();
   \       0x16   0x.... 0x....      BL       Touch_Configuration
    133              NVIC_Configure();
   \       0x1A   0x.... 0x....      BL       NVIC_Configure
    134              TIM_Configure();
   \       0x1E   0x.... 0x....      BL       TIM_Configure
    135          /*--------------------------*/
    136          
    137              uint16_t c_x,c_y;
    138              uint16_t p_x,p_y;
    139              uint16_t brightness;
    140              char* team_str = "MON_Team02";
   \       0x22   0x....             LDR.N    R2,??DataTable5_6
    141              
    142              LCD_ShowString(30,30,team_str,color[2],color[0]); // team
                                          ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "u8 *"
   \       0x24   0x....             LDR.N    R4,??DataTable5_7
   \       0x26   0x6820             LDR      R0,[R4, #+0]
   \       0x28   0xB280             UXTH     R0,R0
   \       0x2A   0x9000             STR      R0,[SP, #+0]
   \       0x2C   0x68A0             LDR      R0,[R4, #+8]
   \       0x2E   0x0003             MOVS     R3,R0
   \       0x30   0xB29B             UXTH     R3,R3
   \       0x32   0x211E             MOVS     R1,#+30
   \       0x34   0x201E             MOVS     R0,#+30
   \       0x36   0x.... 0x....      BL       LCD_ShowString
    143              
    144              LCD_ShowString(45,105,"BUT",color[3],color[0]); // Button 
   \       0x3A   0x6820             LDR      R0,[R4, #+0]
   \       0x3C   0xB280             UXTH     R0,R0
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0x68E0             LDR      R0,[R4, #+12]
   \       0x42   0x0003             MOVS     R3,R0
   \       0x44   0xB29B             UXTH     R3,R3
   \       0x46   0x....             ADR.N    R2,??DataTable5
   \       0x48   0x2169             MOVS     R1,#+105
   \       0x4A   0x202D             MOVS     R0,#+45
   \       0x4C   0x.... 0x....      BL       LCD_ShowString
    145              LCD_DrawRectangle(30,90,60,120);
   \       0x50   0x2378             MOVS     R3,#+120
   \       0x52   0x223C             MOVS     R2,#+60
   \       0x54   0x215A             MOVS     R1,#+90
   \       0x56   0x201E             MOVS     R0,#+30
   \       0x58   0x.... 0x....      BL       LCD_DrawRectangle
    146              
    147              GPIOD->BRR = GPIO_BRR_BR2 | GPIO_BRR_BR7;
   \       0x5C   0x2084             MOVS     R0,#+132
   \       0x5E   0x....             LDR.N    R1,??DataTable5_8
   \       0x60   0x6008             STR      R0,[R1, #+0]
    148              
    149              uint16_t precount=count;
   \       0x62   0x....             LDR.N    R4,??DataTable5_4
   \       0x64   0x8821             LDRH     R1,[R4, #+0]
   \       0x66   0xE022             B.N      ??main_0
    150              
    151              while (1) {
    152                if(!T_INT){
    153                  //if(Touch_GetXY()
    154                  doToggling = !doToggling;
    155                }
    156                if(doToggling == 0)
    157                    count = 0;
    158                  
    159                  if(count != precount && doToggling == 1) {
    160                    if(!Temp_LED1){
    161                    GPIO_SetBits(GPIOD, GPIO_Pin_2);
    162                      Temp_LED1 = 1;
    163                    } else {
    164                    GPIO_ResetBits(GPIOD,GPIO_Pin_2);
    165                      Temp_LED1 = 0;
    166                    }
    167                  }
    168                  
    169                  
    170                  if(count%5 && doToggling == 1) {
    171                     if(!Temp_LED4){
    172                    GPIO_SetBits(GPIOD, GPIO_Pin_7);
    173                      Temp_LED4 = 1;
    174                    } else {
    175                    GPIO_ResetBits(GPIOD,GPIO_Pin_7);
   \                     ??main_1: (+1)
   \       0x68   0x2180             MOVS     R1,#+128
   \       0x6A   0x....             LDR.N    R0,??DataTable5_1
   \       0x6C   0x.... 0x....      BL       GPIO_ResetBits
    176                      Temp_LED4 = 0;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x8028             STRH     R0,[R5, #+0]
   \       0x74   0xE01A             B.N      ??main_2
    177                    }
   \                     ??main_3: (+1)
   \       0x76   0x2104             MOVS     R1,#+4
   \       0x78   0x....             LDR.N    R0,??DataTable5_1
   \       0x7A   0x.... 0x....      BL       GPIO_ResetBits
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x8030             STRH     R0,[R6, #+0]
   \                     ??main_4: (+1)
   \       0x82   0x8820             LDRH     R0,[R4, #+0]
   \       0x84   0x2105             MOVS     R1,#+5
   \       0x86   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \       0x8A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x8E   0x2800             CMP      R0,#+0
   \       0x90   0xD00C             BEQ.N    ??main_2
   \       0x92   0x8828             LDRH     R0,[R5, #+0]
   \       0x94   0x2801             CMP      R0,#+1
   \       0x96   0xD109             BNE.N    ??main_2
   \       0x98   0x....             LDR.N    R5,??DataTable5_9
   \       0x9A   0x8828             LDRH     R0,[R5, #+0]
   \       0x9C   0x2800             CMP      R0,#+0
   \       0x9E   0xD1E3             BNE.N    ??main_1
   \       0xA0   0x2180             MOVS     R1,#+128
   \       0xA2   0x....             LDR.N    R0,??DataTable5_1
   \       0xA4   0x.... 0x....      BL       GPIO_SetBits
   \       0xA8   0x2001             MOVS     R0,#+1
   \       0xAA   0x8028             STRH     R0,[R5, #+0]
    178                  }
    179                  precount = count;
   \                     ??main_2: (+1)
   \       0xAC   0x8821             LDRH     R1,[R4, #+0]
   \                     ??main_0: (+1)
   \       0xAE   0x....             LDR.N    R0,??DataTable5_10
   \       0xB0   0x6800             LDR      R0,[R0, #+0]
   \       0xB2   0xF3C0 0x1040      UBFX     R0,R0,#+5,#+1
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xD108             BNE.N    ??main_5
   \       0xBA   0x....             LDR.N    R2,??DataTable5_3
   \       0xBC   0x8810             LDRH     R0,[R2, #+0]
   \       0xBE   0x2800             CMP      R0,#+0
   \       0xC0   0xD101             BNE.N    ??main_6
   \       0xC2   0x2001             MOVS     R0,#+1
   \       0xC4   0xE000             B.N      ??main_7
   \                     ??main_6: (+1)
   \       0xC6   0x2000             MOVS     R0,#+0
   \                     ??main_7: (+1)
   \       0xC8   0xB2C0             UXTB     R0,R0
   \       0xCA   0x8010             STRH     R0,[R2, #+0]
   \                     ??main_5: (+1)
   \       0xCC   0x....             LDR.N    R5,??DataTable5_3
   \       0xCE   0x8828             LDRH     R0,[R5, #+0]
   \       0xD0   0x2800             CMP      R0,#+0
   \       0xD2   0xD101             BNE.N    ??main_8
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0x8020             STRH     R0,[R4, #+0]
   \                     ??main_8: (+1)
   \       0xD8   0x8820             LDRH     R0,[R4, #+0]
   \       0xDA   0xB289             UXTH     R1,R1
   \       0xDC   0x4288             CMP      R0,R1
   \       0xDE   0xD0D0             BEQ.N    ??main_4
   \       0xE0   0x8828             LDRH     R0,[R5, #+0]
   \       0xE2   0x2801             CMP      R0,#+1
   \       0xE4   0xD1CD             BNE.N    ??main_4
   \       0xE6   0x....             LDR.N    R6,??DataTable5_11
   \       0xE8   0x8830             LDRH     R0,[R6, #+0]
   \       0xEA   0x2800             CMP      R0,#+0
   \       0xEC   0xD1C3             BNE.N    ??main_3
   \       0xEE   0x2104             MOVS     R1,#+4
   \       0xF0   0x....             LDR.N    R0,??DataTable5_1
   \       0xF2   0x.... 0x....      BL       GPIO_SetBits
   \       0xF6   0x2001             MOVS     R0,#+1
   \       0xF8   0x8030             STRH     R0,[R6, #+0]
   \       0xFA   0xE7C2             B.N      ??main_4
    180              }
    181              return 0;
                     ^
Warning[Pe111]: statement is unreachable

      uint16_t c_x,c_y;
               ^
"C:\team02\user\main.c",137  Warning[Pe177]: variable "c_x" was declared but
          never referenced

      uint16_t c_x,c_y;
                   ^
"C:\team02\user\main.c",137  Warning[Pe177]: variable "c_y" was declared but
          never referenced

      uint16_t p_x,p_y;
               ^
"C:\team02\user\main.c",138  Warning[Pe177]: variable "p_x" was declared but
          never referenced

      uint16_t p_x,p_y;
                   ^
"C:\team02\user\main.c",138  Warning[Pe177]: variable "p_y" was declared but
          never referenced

      uint16_t brightness;
               ^
"C:\team02\user\main.c",139  Warning[Pe177]: variable "brightness" was declared
          but never referenced
    182          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x42 0x55          DC8      "BUT"          

   \              0x54 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x4001'1400        DC32     0x40011400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x4001'1000        DC32     0x40011000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x....'....        DC32     doToggling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \        0x0   0x....'....        DC32     count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \        0x0   0x001E'8480        DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \        0x0   0x....'....        DC32     color

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \        0x0   0x4001'1414        DC32     0x40011414

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \        0x0   0x....'....        DC32     Temp_LED4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \        0x0   0x4001'1008        DC32     0x40011008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \        0x0   0x....'....        DC32     Temp_LED1

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x4D 0x4F          DC8 "MON_Team02"

   \              0x4E 0x5F    

   \              0x54 0x65    

   \              0x61 0x6D    

   \              0x30 0x32    

   \              0x00
   \        0xB                      DS8 1

   \                                 In section .rodata, align 4
   \        0x0   0x42 0x55          DC8 "BUT"

   \              0x54 0x00

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay
       8   EXTI9_5_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
         8   -> GPIO_ReadInputDataBit
      16   EXTI_Configure
        16   -> EXTI_Init
        16   -> GPIO_EXTILineConfig
       8   GPIO_Configure
         8   -> GPIO_Init
       8   NVIC_Configure
         8   -> NVIC_Init
         8   -> NVIC_PriorityGroupConfig
       8   RCC_Configure
         8   -> RCC_APB1PeriphClockCmd
         8   -> RCC_APB2PeriphClockCmd
       8   TIM2_IRQHandler
         8   -> TIM_ClearITPendingBit
         8   -> TIM_GetITStatus
      16   TIM_Configure
        16   -> TIM_Cmd
        16   -> TIM_ITConfig
        16   -> TIM_TimeBaseInit
      24   main
        24   -> EXTI_Configure
        24   -> GPIO_Configure
        24   -> GPIO_ResetBits
        24   -> GPIO_SetBits
        24   -> LCD_DrawRectangle
        24   -> LCD_Init
        24   -> LCD_ShowString
        24   -> NVIC_Configure
        24   -> RCC_Configure
        24   -> SystemInit
        24   -> TIM_Configure
        24   -> Touch_Configuration


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      12  ?_0
       4  ?_1
      14  Delay
      56  EXTI9_5_IRQHandler
      42  EXTI_Configure
      30  GPIO_Configure
      72  NVIC_Configure
      36  RCC_Configure
      36  TIM2_IRQHandler
      64  TIM_Configure
       2  Temp_LED1
       2  Temp_LED4
       2  brightness
      48  color
       2  count
       2  doToggling
     252  main

 
  10 bytes in section .bss
  48 bytes in section .data
  16 bytes in section .rodata
 650 bytes in section .text
 
 650 bytes of CODE  memory
  16 bytes of CONST memory
  58 bytes of DATA  memory

Errors: none
Warnings: 7
