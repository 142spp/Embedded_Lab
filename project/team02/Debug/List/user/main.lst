###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         25/Oct/2022  22:05:02
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\code\Embedded_Lab\project\team02\user\main.c
#    Command line                 =
#        -f C:\code\Embedded_Lab\project\team02\Debug\Obj\user\main.o.rsp
#        (C:\code\Embedded_Lab\project\team02\user\main.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\code\Embedded_Lab\project\team02\Debug\List\user -o
#        C:\code\Embedded_Lab\project\team02\Debug\Obj\user --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\code\Embedded_Lab\project\team02\libraries\CMSIS\DeviceSupport\ -I
#        C:\code\Embedded_Lab\project\team02\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\code\Embedded_Lab\project\team02\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\code\Embedded_Lab\project\team02\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\code\Embedded_Lab\project\team02\libraries\LCD\ -I
#        C:\code\Embedded_Lab\project\team02\user\ -I
#        C:\code\Embedded_Lab\project\team02\user\inc\ -Ol -I "C:\Program
#        Files\IAR Systems\Embedded Workbench 9.1\arm\CMSIS\Core\Include\\")
#        --dependencies=n
#        C:\code\Embedded_Lab\project\team02\Debug\Obj\user\main.o.d
#    Locale                       =  C
#    List file                    =
#        C:\code\Embedded_Lab\project\team02\Debug\List\user\main.lst
#    Object file                  =
#        C:\code\Embedded_Lab\project\team02\Debug\Obj\user\main.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#      __iar_require _Printf         
#      __size_limit               =  32768|ARM.EW.LINKER
#
###############################################################################

C:\code\Embedded_Lab\project\team02\user\main.c
      1          #include "misc.h"
      2          #include "stm32f10x.h"
      3          #include "stm32f10x_exti.h"
      4          #include "stm32f10x_gpio.h"
      5          #include "stm32f10x_rcc.h"
      6          #include "stm32f10x_adc.h"
      7          #include "stm32f10x_usart.h"
      8          #include "lcd.h"
      9          #include "touch.h"
     10          #include <stdlib.h>
     11          #include <stdio.h>
     12          
     13          /* function prototype */
     14          void Delay(void);
     15          

   \                                 In section .bss, align 2
     16          uint16_t brightness = 0;
   \                     brightness:
   \        0x0                      DS8 2
     17          
     18          //---------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     19          void RCC_Configure(void) {
   \                     RCC_Configure: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     20              // TODO: Enable the APB2 peripheral clock using the function 'RCC_APB2PeriphClockCmd'
     21          
     22              /* UART TX/RX port clock enable */
     23              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
   \        0x2   0x2101             MOVS     R1,#+1
   \        0x4   0x2004             MOVS     R0,#+4
   \        0x6   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     24              /* Alternate Function IO clock enable */
     25              RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
   \        0xA   0x2101             MOVS     R1,#+1
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
     26          }
   \       0x12   0xBD01             POP      {R0,PC}
     27          
     28          // void ADC_Configure(void){
     29          //     ADC_InitTypeDef ADC_struct;
     30          //     ADC_Init(1,ADC_struct);
     31          //     ADC_RegularChannelConfig()
     32          //     ADC_ITConfig()
     33          //     ADC_Cmd()
     34          //     ADC_ResetCalibration()
     35          //     While(ADC_GetResetCalibrationStatus) // ->while ����Ͽ� üũ
     36          //     ADC_StartCalibration()
     37          //     While(ADC_GetCalibrationStatus) // ->while ����Ͽ� üũ
     38          //     ADC_SoftwareStartConvCmd()
     39          
     40          // }
     41          

   \                                 In section .text, align 2, keep-with-next
     42          void Delay(void) {
     43              int i;
     44              for (i = 0; i < 2000000; i++) {
   \                     Delay: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0xE000             B.N      ??Delay_0
   \                     ??Delay_1: (+1)
   \        0x4   0x1C40             ADDS     R0,R0,#+1
   \                     ??Delay_0: (+1)
   \        0x6   0x....             LDR.N    R1,??DataTable2_1
   \        0x8   0x4288             CMP      R0,R1
   \        0xA   0xDBFB             BLT.N    ??Delay_1
     45              }
     46          }
   \        0xC   0x4770             BX       LR
     47          

   \                                 In section .data, align 4
     48          int color[12] = {WHITE,CYAN,BLUE,RED,MAGENTA,LGRAY,GREEN,YELLOW,BROWN,BRRED,GRAY};
   \                     color:
   \        0x0   0x0000'FFFF        DC32 65'535, 32'767, 31, 63'488, 63'519, 50'712, 2'016, 65'504, 48'192

   \              0x0000'7FFF  

   \              0x0000'001F  

   \              0x0000'F800  

   \              0x0000'F81F  

   \              0x0000'C618  

   \              0x0000'07E0  

   \              0x0000'FFE0  

   \              0x0000'BC40
   \       0x24   0x0000'FC07        DC32 64'519, 33'840, 0

   \              0x0000'8430  

   \              0x0000'0000
     49          

   \                                 In section .text, align 2, keep-with-next
     50          void itoa(int a, char* b){
   \                     itoa: (+1)
   \        0x0   0xB410             PUSH     {R4}
     51            int i=0;
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0xE00A             B.N      ??itoa_0
     52            //b[i++] = " ";
     53            while(a>0){
     54              b[i++] = a%10 - '0';
   \                     ??itoa_1: (+1)
   \        0x6   0x230A             MOVS     R3,#+10
   \        0x8   0xFB90 0xF4F3      SDIV     R4,R0,R3
   \        0xC   0xFB03 0x0314      MLS      R3,R3,R4,R0
   \       0x10   0x3B30             SUBS     R3,R3,#+48
   \       0x12   0x548B             STRB     R3,[R1, R2]
   \       0x14   0x1C52             ADDS     R2,R2,#+1
     55              a /= 10;
   \       0x16   0x230A             MOVS     R3,#+10
   \       0x18   0xFB90 0xF0F3      SDIV     R0,R0,R3
     56            };
   \                     ??itoa_0: (+1)
   \       0x1C   0x2801             CMP      R0,#+1
   \       0x1E   0xDAF2             BGE.N    ??itoa_1
     57            b[i] = '\0';
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x5488             STRB     R0,[R1, R2]
     58          }
   \       0x24   0xBC10             POP      {R4}
   \       0x26   0x4770             BX       LR
     59          

   \                                 In section .text, align 2, keep-with-next
     60          int main(void) {
   \                     main: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
     61              SystemInit();
   \        0x4   0x.... 0x....      BL       SystemInit
     62              RCC_Configure();
   \        0x8   0x.... 0x....      BL       RCC_Configure
     63              
     64          /*--------------------------*/
     65              LCD_Init();
   \        0xC   0x.... 0x....      BL       LCD_Init
     66              Touch_Configuration();
   \       0x10   0x.... 0x....      BL       Touch_Configuration
     67              //Touch_Adjust();
     68              //LCD_Clear(color[0]);
     69          /*--------------------------*/
     70              char* a;
     71              uint16_t c_x = 10;
   \       0x14   0x250A             MOVS     R5,#+10
     72              sprintf(a,"%d",c_x);
   \       0x16   0x002A             MOVS     R2,R5
   \       0x18   0xB292             UXTH     R2,R2
   \       0x1A   0x....             ADR.N    R1,??DataTable2
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0x.... 0x....      BL       sprintf
     73              uint16_t c_y = 10;
   \       0x22   0x260A             MOVS     R6,#+10
     74              char** s_x,s_y;
     75              u8* team_str = "MON_Team02";
   \       0x24   0x....             LDR.N    R7,??DataTable2_2
     76              while (1) {
     77                  //Touch_GetXY(&c_x,&c_y,1);
     78                  //c_x += 6;
     79                  //c_y += 6;
     80                //itoa(c_x,s_x);
     81                //itoa(c_y,s_y);
     82                  LCD_DrawCircle(c_x,c_y,3);
   \                     ??main_0: (+1)
   \       0x26   0x2203             MOVS     R2,#+3
   \       0x28   0x0031             MOVS     R1,R6
   \       0x2A   0xB289             UXTH     R1,R1
   \       0x2C   0x0028             MOVS     R0,R5
   \       0x2E   0xB280             UXTH     R0,R0
   \       0x30   0x.... 0x....      BL       LCD_DrawCircle
     83                  //LCD_ShowString(30,30,"MON",color[2],color[3]); // team
     84                  LCD_ShowString(30,40,team_str,color[2],color[0]); // team
   \       0x34   0x.... 0x....      LDR.W    R8,??DataTable2_3
   \       0x38   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x3C   0xB280             UXTH     R0,R0
   \       0x3E   0x9000             STR      R0,[SP, #+0]
   \       0x40   0xF8D8 0x0008      LDR      R0,[R8, #+8]
   \       0x44   0x0003             MOVS     R3,R0
   \       0x46   0xB29B             UXTH     R3,R3
   \       0x48   0x003A             MOVS     R2,R7
   \       0x4A   0x2128             MOVS     R1,#+40
   \       0x4C   0x201E             MOVS     R0,#+30
   \       0x4E   0x.... 0x....      BL       LCD_ShowString
     85                  LCD_ShowString(100,60,a,color[2],color[0]); // team
                                               ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "u8 *"
   \       0x52   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x56   0xB280             UXTH     R0,R0
   \       0x58   0x9000             STR      R0,[SP, #+0]
   \       0x5A   0xF8D8 0x0008      LDR      R0,[R8, #+8]
   \       0x5E   0x0003             MOVS     R3,R0
   \       0x60   0xB29B             UXTH     R3,R3
   \       0x62   0x0022             MOVS     R2,R4
   \       0x64   0x213C             MOVS     R1,#+60
   \       0x66   0x2064             MOVS     R0,#+100
   \       0x68   0x.... 0x....      BL       LCD_ShowString
     86                  //LCD_ShowString(100,80,s_y,color[2],color[0]); // team
     87                  //LCD_ShowString(50,40,(u8*)c_x,color[2],color[0]); // cursor x
     88                  //LCD_ShowString(50,50,(u8*)c_y,color[2],color[0]); // cursor y
     89                  //LCD_ShowString(30,60,(u8*)132,color[2],color[0]); // bright sensor
     90                  Delay();
   \       0x6C   0x.... 0x....      BL       Delay
   \       0x70   0xE7D9             B.N      ??main_0
     91              }
     92          
     93              return 0;
                     ^
Warning[Pe111]: statement is unreachable

      char** s_x,s_y;
             ^
"C:\code\Embedded_Lab\project\team02\user\main.c",74  Warning[Pe177]: variable
          "s_x" was declared but never referenced

      char** s_x,s_y;
                 ^
"C:\code\Embedded_Lab\project\team02\user\main.c",74  Warning[Pe177]: variable
          "s_y" was declared but never referenced

      sprintf(a,"%d",c_x);
              ^
"C:\code\Embedded_Lab\project\team02\user\main.c",72  Warning[Go029]: Variable
          "a" is used uninitialized at this location in the sourcecode.
     94          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00

   \              0x00 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x001E'8480        DC32     0x1e8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x....'....        DC32     color

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x64          DC8 "%d"

   \              0x00
   \        0x3                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x4D 0x4F          DC8 "MON_Team02"

   \              0x4E 0x5F    

   \              0x54 0x65    

   \              0x61 0x6D    

   \              0x30 0x32    

   \              0x00
   \        0xB                      DS8 1

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Delay
       8   RCC_Configure
         8   -> RCC_APB2PeriphClockCmd
       4   itoa
      32   main
        32   -> Delay
        32   -> LCD_DrawCircle
        32   -> LCD_Init
        32   -> LCD_ShowString
        32   -> RCC_Configure
        32   -> SystemInit
        32   -> Touch_Configuration
        32   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ?_0
      12  ?_1
      14  Delay
      20  RCC_Configure
       2  brightness
      48  color
      40  itoa
     114  main

 
   2 bytes in section .bss
  48 bytes in section .data
  16 bytes in section .rodata
 204 bytes in section .text
 
 204 bytes of CODE  memory
  16 bytes of CONST memory
  50 bytes of DATA  memory

Errors: none
Warnings: 5
