###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         30/Nov/2022  19:50:10
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c
#    Command line      =
#        -f
#        C:\code\Embedded_Lab\term_project\Debug\Obj\Libraries\MODULES\pir.o.rsp
#        (C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_CL -lC
#        C:\code\Embedded_Lab\term_project\Debug\List\Libraries\MODULES -o
#        C:\code\Embedded_Lab\term_project\Debug\Obj\Libraries\MODULES --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        9.1\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\code\Embedded_Lab\term_project\libraries\CMSIS\DeviceSupport\ -I
#        C:\code\Embedded_Lab\term_project\libraries\CMSIS\DeviceSupport\Startup\
#        -I
#        C:\code\Embedded_Lab\term_project\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\
#        -I
#        C:\code\Embedded_Lab\term_project\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\
#        -I C:\code\Embedded_Lab\term_project\libraries\LCD\ -I
#        C:\code\Embedded_Lab\term_project\libraries\MODULES\ -I
#        C:\code\Embedded_Lab\term_project\user\ -I
#        C:\code\Embedded_Lab\term_project\user\inc\ -Ol -I "C:\Program
#        Files\IAR Systems\Embedded Workbench 9.1\arm\CMSIS\Core\Include\\")
#        --dependencies=n
#        C:\code\Embedded_Lab\term_project\Debug\Obj\Libraries\MODULES\pir.o.d
#    Locale            =  C
#    List file         =
#        C:\code\Embedded_Lab\term_project\Debug\List\Libraries\MODULES\pir.lst
#    Object file       =
#        C:\code\Embedded_Lab\term_project\Debug\Obj\Libraries\MODULES\pir.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#      __size_limit    =  32768|ARM.EW.LINKER
#
###############################################################################

C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c
      1          #include "pir.h"
      2          
      3          /*void PIR_RCC_Configure(void) {
      4              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);   //PIR Sensor Pin Enable
      5              RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC, ENABLE);     //ADC Enable
      6          }*/
      7          
      8          void Pir_RCC_Init(){
      9              RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);   //PIR Sensor Pin Enable
     10              RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);     //ADC Enable
     11          }
     12          
     13          void PIR_GPIO_Init(void) {
     14              GPIO_InitTypeDef GPIO_InitStructure;
     15          
     16              //GPIOA Configuration
     17              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
     18              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
     19              GPIO_Init(GPIOA, &GPIO_InitStructure);
     20              //PIR ADC1?GPIOA 0? Pin ??
     21          }
     22          
     23          void PIR_ADC_Init(void){
     24              ADC_InitTypeDef ADC_InitStructure;
     25          
     26              //ADC1 Configuration
     27              ADC_InitStructure.ADC_Mode = ADC_Mode_Independent;
     28              ADC_InitStructure.ADC_ScanConvMode = DISABLE;
     29              ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
     30              ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
     31              ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
     32              ADC_InitStructure.ADC_NbrOfChannel = 1;
     33              ADC_Init(ADC1, &ADC_InitStructure);
     34          ?
                 ^
Error[Pe029]: expected an expression
     35              ADC_RegularChannelConfig(ADC1, ADC_Channel_0, 1, ADC_SampleTime_239Cycles5);  // ADC1 Channel 0 is GPIOA_Pin0
     36              ADC_ITConfig(ADC1, ADC_IT_EOC, ENABLE);  // interrupt enable
     37              // ADC_DMACmd(ADC1, ENABLE);  // DMA Enable
     38              ADC_Cmd(ADC1, ENABLE);     // ADC1 enable
     39          
     40              ADC_ResetCalibration(ADC1);
     41              while (ADC_GetResetCalibrationStatus(ADC1)) ;
     42              ADC_StartCalibration(ADC1);
     43              while (ADC_GetCalibrationStatus(ADC1)) ;
     44              ADC_SoftwareStartConvCmd(ADC1, ENABLE);
     45          }
     46          
     47          void PIR_NVIC_Init(void) {
     48              NVIC_InitTypeDef NVIC_InitStructure;
     49          
     50              // PIR Sensor
     51              NVIC_InitStructure.NVIC_IRQChannel = ADC_IRQn;
                                                          ^
Error[Pe020]: identifier "ADC_IRQn" is undefined
     52              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;  
     53              NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;         
     54              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
     55              NVIC_Init(&NVIC_InitStructure);
     56          }
     57          
     58          void ADC1_2_IRQHandler(void) {
     59              //
     60          }
     61          
     62          void Pir_Delay(void) {
     63              for (int i = 0; i < 1000000; i++)
     64                  ;   
     65          }
     66          
     67          void PIR_Init(void){
     68              PIR_RCC_Init(void);
                                  ^
Error[Pe029]: expected an expression

      PIR_RCC_Init(void);
                       ^
"C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c",68  Error[Pe140]: 
          too many arguments in function call
     69              PIR_ADC_Init(void);
                                  ^
Error[Pe029]: expected an expression

      PIR_ADC_Init(void);
                       ^
"C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c",69  Error[Pe140]: 
          too many arguments in function call
     70              PIR_GPIO_Init(void);
                                   ^
Error[Pe029]: expected an expression

      PIR_GPIO_Init(void);
                        ^
"C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c",70  Error[Pe140]: 
          too many arguments in function call
     71              PIR_NVIC_Init(void);
                                   ^
Error[Pe029]: expected an expression

      PIR_NVIC_Init(void);
                        ^
"C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c",71  Error[Pe140]: 
          too many arguments in function call
     72              Pir_Delay(void);
                               ^
Error[Pe029]: expected an expression

      Pir_Delay(void);
                    ^
"C:\code\Embedded_Lab\term_project\Libraries\MODULES\pir.c",72  Error[Pe140]: 
          too many arguments in function call
     73          }
     74          
     75          //HIGH->on,LOW->off
     76          
     77          /*val = digitalRead(SensorOut);
     78          if (val == HIGH) {
     79              digitalWrite(Led, HIGH);
     80          }
     81          else {
     82              digitalWrite(Led, LOW);
     83          }
     84          delay(100);*/

Errors: 12
Warnings: none
